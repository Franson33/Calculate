{"version":3,"sources":["css/Calculator.module.css","components/Input.js","components/Buttons.js","data/btnSymbols.js","components/functions.js","screens/Calculator.js","App.js","index.js","css/App.module.css"],"names":["module","exports","Input","one","two","className","stl","inputWrapper","calcInput","type","readOnly","value","calcOutput","Button","style","onClick","calcBtn","btnTxt","symbolOperand","symbolOperator","clear","str","slice","toggleIsComma","comma","change","makeKey","i","j","Math","floor","random","doMath","item1","item2","operator","Calculator","useState","displaySum","setDisplaySum","input","setInput","isComma","setIsComma","current","setCurrent","next","setNext","useEffect","currentArr","match","length","Error","console","table","undefined","sumString","toString","addValues","countDisplaySum","calcContainer","btnContainer","operands","map","item","operandBtn","action","currentIsComma","addComma","operators","operatorBtn","endsWith","add","App","styles","mainContainer","header","headerLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb41c832.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcContainer\":\"Calculator_calcContainer__1vw-Q\",\"inputWrapper\":\"Calculator_inputWrapper__3Ckp5\",\"calcInput\":\"Calculator_calcInput__3ndU8\",\"calcOutput\":\"Calculator_calcOutput__25jMx\",\"btnContainer\":\"Calculator_btnContainer__3IZ9w\",\"operands\":\"Calculator_operands__2Ijpd\",\"operators\":\"Calculator_operators__H41AL\",\"calcBtn\":\"Calculator_calcBtn__1pFAS\",\"operandBtn\":\"Calculator_operandBtn__3h7x1\",\"operatorBtn\":\"Calculator_operatorBtn__2acCD\",\"btnTxt\":\"Calculator_btnTxt__2LhUw\"};","import stl from '../css/Calculator.module.css'\n\nconst Input = ({ one, two }) => (\n  <div className={stl.inputWrapper}>\n    <input\n      className={stl.calcInput}\n      type='text'\n      readOnly\n      value={one}\n    />\n    <input\n      className={stl.calcInput + ' ' + stl.calcOutput}\n      type='text'\n      readOnly\n      value={two}\n    />\n  </div>\n)\n\nexport default Input\n","import stl from '../css/Calculator.module.css'\n\nconst Button = ({ value, style, onClick }) => (\n  <button\n    className={stl.calcBtn + ' ' + `${style}`}\n    type='button'\n    onClick={onClick}\n  >\n    <p className={stl.btnTxt}>{value}</p>\n  </button>\n)\n\nexport default Button\n","export const symbolOperand = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n\nexport const symbolOperator = [' / ', ' * ', ' - ', ' + ']\n","const clear = str => str.slice(0, -3)\n\nexport const removeLastChild = (str, action) => {\n  return (\n    str.endsWith(' ')\n      ? action(clear(str))\n      : action(str.slice(0, -1))\n  )\n}\n\nexport const addOperator = (str, action, add, comma) => {\n  return (\n    str.endsWith(' ')\n      ? action(clear(str) + add)\n      : (action(str + add),\n        toggleIsComma(true, comma))\n  )\n}\n\nexport const addComma = (str, action, currentIsComma, setIsComma) => {\n  return (\n    str.match(/[\\s+-/*]{0,}.[\\d+-/*]{0,}/) && currentIsComma\n      ? action(str)\n      : (action(str + '.'),\n        toggleIsComma(currentIsComma, setIsComma))\n  )\n}\n\nconst toggleIsComma = (comma, change) => comma ? change(false) : change(true)\n\nexport const makeKey = (i) => {\n  const math = (j) => Math.floor(Math.random() * 1000000 * (50 - j))\n  return math(i)\n}\n\nexport const doMath = (item1, item2, operator) => {\n  switch (operator) {\n    case ('/'):\n      return +item1 / +item2\n    case ('*'):\n      return +item1 * +item2\n    case ('-'):\n      return +item1 - +item2\n    case ('+'):\n      return +item1 + +item2\n    default:\n      return 0\n  }\n}\n","import { useState, useEffect } from 'react'\nimport Input from '../components/Input'\nimport Button from '../components/Buttons'\nimport stl from '../css/Calculator.module.css'\nimport {\n  symbolOperand,\n  symbolOperator\n} from '../data/btnSymbols'\nimport {\n  removeLastChild,\n  addOperator,\n  addComma,\n  makeKey,\n  doMath\n} from '../components/functions'\n\nconst Calculator = () => {\n  const [displaySum, setDisplaySum] = useState('0')\n  const [input, setInput] = useState('')\n  const [isComma, setIsComma] = useState(false)\n  const [current, setCurrent] = useState('0')\n  const [next, setNext] = useState('0')\n\n  const countDisplaySum = (str) => {\n    const currentArr = input.match(/[\\d][\\d/.]{0,}/g) || []\n    const operator = input.match(/[+\\-*/]/g) || []\n\n    if (currentArr?.length === 0 && currentArr[0]) {\n      throw new Error('currentArr is empty')\n    }\n    const addValues = () => {\n      let current = currentArr[currentArr.length - 2]\n      let next = currentArr[currentArr.length - 1]\n      current = current === undefined ? 0 : current\n      next = next === undefined ? displaySum : next\n      setCurrent(current)\n      setNext(next)\n      const sumNumber = doMath(next, current, operator[currentArr.length - 1])\n      const sumString = sumNumber.toString()\n      return (\n        setDisplaySum(doMath(displaySum, sumString, operator[currentArr.length - 1]))\n      )\n    }\n    console.table({ currentArr, operator, next, current })\n    return addValues(operator)\n  }\n\n  useEffect(() => {\n    countDisplaySum(input)\n  }, [input])\n\n  return (\n    <div className={stl.calcContainer}>\n      <Input one={input} two={displaySum} />\n      <div className={stl.btnContainer + ' ' + stl.operands}>\n        {symbolOperand.map((item, i) => {\n          return (\n            <Button\n              value={item}\n              key={makeKey(i)}\n              style={stl.operandBtn}\n              onClick={() => {\n                return (\n                  setInput(input + item)\n                )\n              }}\n            />\n          )\n        })}\n        <Button\n          value=','\n          key={makeKey(symbolOperand.length + 2)}\n          style={stl.operandBtn}\n          onClick={() => {\n            return (\n              addComma(input, setInput, isComma, setIsComma)\n            )\n          }}\n        />\n        <Button\n          value='='\n          key={makeKey(symbolOperand.length + 1)}\n          style={stl.operandBtn}\n          onClick={() => {\n            return (\n              setInput(displaySum),\n              setDisplaySum(0)\n            )\n          }}\n        />\n      </div>\n      <div className={stl.btnContainer + ' ' + stl.operators}>\n        <Button\n          value=' < '\n          key={makeKey(symbolOperator.length + 1)}\n          style={stl.operatorBtn}\n          onClick={() => removeLastChild(input, setInput)}\n        />\n        {symbolOperator.map((item, i) => {\n          return (\n            <Button\n              value={item}\n              key={makeKey(i)}\n              style={stl.operatorBtn}\n              onClick={() => addOperator(input, setInput, item, setIsComma)}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Calculator\n","import Calculator from './screens/Calculator'\nimport styles from './css/App.module.css'\n\nfunction App () {\n  return (\n    <div className={styles.mainContainer}>\n      <div className={styles.header}>\n        <p className={styles.headerLogo}>Calculate!</p>\n      </div>\n      <Calculator />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__3-i8X\",\"header\":\"App_header__1dUFM\",\"headerLogo\":\"App_headerLogo___psWh\"};"],"sourceRoot":""}